[{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/CLAUDE.html","id":null,"dir":"","previous_headings":"","what":"Claude Development Notes for blockr.ggplot","title":"Claude Development Notes for blockr.ggplot","text":"üìö Developer guides: dev/README.md - Core concepts: blocks-core-guide.md - ggplot patterns: ggplot-blocks-guide.md - UI guidelines: ui-guidelines.md","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/CLAUDE.html","id":"must-follow","dir":"","previous_headings":"","what":"Must Follow","title":"Claude Development Notes for blockr.ggplot","text":"Use parse(text = glue::glue()) expressions Add optional fields allow_empty_state = c(\"color\", \"fill\", ...) Include constructor params state list Never add Author: Maintainer: DESCRIPTION","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/CLAUDE.html","id":"common-fixes","dir":"","previous_headings":"","what":"Common Fixes","title":"Claude Development Notes for blockr.ggplot","text":"Plot won‚Äôt render ‚Üí Add allow_empty_state Object found ‚Üí Check != \"(none)\" using Inputs don‚Äôt update ‚Üí Use observeEvent(colnames(data()))","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/CLAUDE.html","id":"more","dir":"","previous_headings":"","what":"More","title":"Claude Development Notes for blockr.ggplot","text":"See dev/README.md complete documentation structure.","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright ¬© 2007 Free Software Foundation, Inc.¬†<http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program‚Äìmake sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers‚Äô authors‚Äô protection, GPL clearly explains warranty free software. users‚Äô authors‚Äô sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users‚Äô freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"‚ÄúLicense‚Äù refers version 3 GNU General Public License. ‚ÄúCopyright‚Äù also means copyright-like laws apply kinds works, semiconductor masks. ‚ÄúProgram‚Äù refers copyrightable work licensed License. licensee addressed ‚Äú‚Äù. ‚ÄúLicensees‚Äù ‚Äúrecipients‚Äù may individuals organizations. ‚Äúmodify‚Äù work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called ‚Äúmodified version‚Äù earlier work work ‚Äúbased ‚Äù earlier work. ‚Äúcovered work‚Äù means either unmodified Program work based Program. ‚Äúpropagate‚Äù work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. ‚Äúconvey‚Äù work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays ‚ÄúAppropriate Legal Notices‚Äù extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"‚Äúsource code‚Äù work means preferred form work making modifications . ‚ÄúObject code‚Äù means non-source form work. ‚ÄúStandard Interface‚Äù means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. ‚ÄúSystem Libraries‚Äù executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. ‚ÄúMajor Component‚Äù, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . ‚ÄúCorresponding Source‚Äù work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work‚Äôs System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users‚Äô Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work‚Äôs users, third parties‚Äô legal rights forbid circumvention technological measures.","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program‚Äôs source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 ‚Äúkeep intact notices‚Äù. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called ‚Äúaggregate‚Äù compilation resulting copyright used limit access legal rights compilation‚Äôs users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. ‚ÄúUser Product‚Äù either (1) ‚Äúconsumer product‚Äù, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, ‚Äúnormally used‚Äù refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. ‚ÄúInstallation Information‚Äù User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"‚ÄúAdditional permissions‚Äù terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered ‚Äúrestrictions‚Äù within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. ‚Äúentity transaction‚Äù transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party‚Äôs predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"‚Äúcontributor‚Äù copyright holder authorizes use License Program work Program based. work thus licensed called contributor‚Äôs ‚Äúcontributor version‚Äù. contributor‚Äôs ‚Äúessential patent claims‚Äù patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, ‚Äúcontrol‚Äù includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor‚Äôs essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, ‚Äúpatent license‚Äù express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). ‚Äúgrant‚Äù patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. ‚ÄúKnowingly relying‚Äù means actual knowledge , patent license, conveying covered work country, recipient‚Äôs use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license ‚Äúdiscriminatory‚Äù include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others‚Äô Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License ‚Äúlater version‚Äù applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy‚Äôs public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM ‚Äú‚Äù WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least ‚Äúcopyright‚Äù line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program‚Äôs commands might different; GUI interface, use ‚Äúbox‚Äù. also get employer (work programmer) school, , sign ‚Äúcopyright disclaimer‚Äù program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/articles/blockr-ggplot-showcase.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"blockr.ggplot Showcase: Visualization Blocks","text":"blockr.ggplot provides interactive blocks data visualization using ggplot2. block offers user interface creating customizing visualizations. Blocks can connected together create sophisticated data visualization pipelines.","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/articles/blockr-ggplot-showcase.html","id":"scatter-plot","dir":"Articles","previous_headings":"","what":"Scatter Plot","title":"blockr.ggplot Showcase: Visualization Blocks","text":"ggplot block creates visualizations using ggplot2. scatter plots, use ‚Äúpoint‚Äù chart type display relationships two continuous variables. Map columns x y axes show variables relate . Add color size aesthetics encode additional variables. color aesthetic uses categorical continuous variables assign colors points, size maps numeric values point sizes. particularly effective exploring correlations patterns multidimensional data. Scatter plots support additional aesthetics including shape (categorical distinctions) alpha (transparency). Use alpha values 0 1 reduce overplotting dense regions. block automatically handles scale creation legend generation mapped aesthetics. ggplot block: scatter plot","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/articles/blockr-ggplot-showcase.html","id":"bar-chart","dir":"Articles","previous_headings":"","what":"Bar Chart","title":"blockr.ggplot Showcase: Visualization Blocks","text":"Bar charts display categorical data rectangular bars. Use ‚Äúbar‚Äù chart type compare values across categories show frequency distributions. Select categorical variable x axis create bars category. fill aesthetic adds color coding another categorical variable, automatically creating stacked grouped bars. Choose position adjustments: ‚Äústack‚Äù (default) stacks bars top , ‚Äúdodge‚Äù places bars side--side, ‚Äúfill‚Äù creates proportional stacked bars showing percentages. Bar charts work well comparing discrete groups, showing distributions categorical variables, displaying summary statistics. block handles count aggregation automatically y variable specified. ggplot block: bar chart","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/articles/blockr-ggplot-showcase.html","id":"line-chart","dir":"Articles","previous_headings":"","what":"Line Chart","title":"blockr.ggplot Showcase: Visualization Blocks","text":"Line charts connect data points show trends time across ordered categories. Use ‚Äúline‚Äù chart type time series sequential data. Map sequential variable (like time age) x axis continuous variable y. color aesthetic creates separate lines different groups, making easy compare trends across categories. Lines automatically sorted x values grouped appropriately. Line charts support additional aesthetics including linetype distinguishing groups different line styles (solid, dashed, dotted) size varying line thickness. visualization ideal temporal data, growth curves, tracking changes ordered sequences. ggplot block: line chart","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/articles/blockr-ggplot-showcase.html","id":"box-plot","dir":"Articles","previous_headings":"","what":"Box Plot","title":"blockr.ggplot Showcase: Visualization Blocks","text":"Box plots display distribution continuous data quartiles. Use ‚Äúboxplot‚Äù chart type compare distributions across groups identify outliers. Select categorical variable x continuous variable y. box shows interquartile range (IQR) line median. Whiskers extend extreme points within 1.5 √ó IQR box edges. Points beyond whiskers plotted individually potential outliers. fill aesthetic colors boxes group. Box plots provide compact summary distribution shape, central tendency, variability. ‚Äôre particularly effective comparing multiple groups side--side, aligned boxes make differences median, spread, skewness immediately visible. ggplot block: box plot","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/articles/blockr-ggplot-showcase.html","id":"violin-plot","dir":"Articles","previous_headings":"","what":"Violin Plot","title":"blockr.ggplot Showcase: Visualization Blocks","text":"Violin plots combine box plots density plots show full distribution shape. Use ‚Äúviolin‚Äù chart type distribution shape matters much summary statistics. Like box plots, violin plots require categorical x variable continuous y variable. width violin y value represents density (frequency) data value. reveals features like multimodality, skewness, distribution tails box plots obscure. fill aesthetic colors violins group easy comparison. Violin plots superior box plots need see whether distributions unimodal multimodal, identify subtle differences distribution shape, understand full data density rather just quartiles. ‚Äôre especially valuable larger datasets distribution details matter. ggplot block: violin plot","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/articles/blockr-ggplot-showcase.html","id":"density-plot","dir":"Articles","previous_headings":"","what":"Density Plot","title":"blockr.ggplot Showcase: Visualization Blocks","text":"Density plots smooth histograms continuous curves showing probability distributions. Use ‚Äúdensity‚Äù chart type compare distributions across groups overlapping curves. Map continuous variable x create density curve. fill aesthetic creates separate curves different groups, alpha transparency allowing curves overlap visibly. Density estimation automatically handles bandwidth selection, though can adjust smoothing needed. Density plots work well comparing distributions want smooth, continuous representations rather binned histograms. ‚Äôre particularly effective alpha aesthetic set 0.5-0.7, makes overlapping distributions easy distinguish. Use compare distribution shapes, identify modes, assess whether groups follow similar patterns. ggplot block: density plot","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/articles/blockr-ggplot-showcase.html","id":"area-chart","dir":"Articles","previous_headings":"","what":"Area Chart","title":"blockr.ggplot Showcase: Visualization Blocks","text":"Area charts filled line charts emphasize cumulative magnitude time. Use ‚Äúarea‚Äù chart type show quantities accumulate emphasize volume curves. Like line charts, area charts map sequential data x continuous values y. fill aesthetic creates separate colored areas different groups. Areas can stacked (showing cumulative totals) overlapped alpha transparency (showing individual contributions). makes ideal part--whole relationships time. Area charts work best filled space meaning, cumulative quantities, market shares, resource allocation time. alpha aesthetic (0.6-0.8) particularly important comparing overlapping areas, allows curves remain visible still emphasizing volume. ggplot block: area chart","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/articles/blockr-ggplot-showcase.html","id":"histogram","dir":"Articles","previous_headings":"","what":"Histogram","title":"blockr.ggplot Showcase: Visualization Blocks","text":"Histograms bin continuous data show frequency distributions. Use ‚Äúhistogram‚Äù chart type understand shape, center, spread single variable. Select continuous variable x. block automatically creates bins counts observations bin. bins parameter controls number bins (default: 30) - fewer bins show general patterns, bins reveal details. fill aesthetic colors bars groups, position options controlling whether bars stack dodge. Histograms fundamental exploratory data analysis: assessing whether data follows normal distribution, identifying skewness multimodality, detecting outliers, understanding data range. Experiment bin counts find right level detail data‚Äôs density range. ggplot block: histogram","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/articles/blockr-ggplot-showcase.html","id":"pie-chart","dir":"Articles","previous_headings":"","what":"Pie Chart","title":"blockr.ggplot Showcase: Visualization Blocks","text":"Pie charts show proportions slices circle. Use ‚Äúpie‚Äù chart type display part--whole relationships categorical data. Map categorical variable x numeric value y. category becomes slice, slice size proportional value. fill aesthetic colors slices category, automatically creating legend. Pie charts work best small number categories (3-7) relative sizes easy compare. controversial among data visualization experts prefer bar charts precise comparisons, pie charts remain intuitive showing simple proportions, especially one category dominates emphasizing parts constitute whole. Keep categories limited consider using donut chart variant modern aesthetic. ggplot block: pie chart","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/articles/blockr-ggplot-showcase.html","id":"donut-chart","dir":"Articles","previous_headings":"","what":"Donut Chart","title":"blockr.ggplot Showcase: Visualization Blocks","text":"Donut charts pie charts center hole, offering modern aesthetic space annotations. Use ‚Äúpie‚Äù chart type donut_hole parameter create variant. Configure exactly like pie charts, set donut_hole value 0.3 0.7 control inner radius. hole creates negative space can reduce visual clutter provides room central labels summary statistics. Donut charts often considered visually appealing standard pie charts conveying information. empty center draws attention can used strategically display total values, titles, key metrics. ring shape also makes slightly easier compare arc lengths full pie slices, curves linear. Use donut charts aesthetics matter want emphasize ring pattern center point. ggplot block: donut chart","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/articles/blockr-ggplot-showcase.html","id":"facet-wrap-layout","dir":"Articles","previous_headings":"","what":"Facet: Wrap Layout","title":"blockr.ggplot Showcase: Visualization Blocks","text":"facet block splits plots multiple panels based categorical variables. Use ‚Äúwrap‚Äù mode flexible grid layouts flow naturally across rows. Select facet variable create separate panel unique value. ncol parameter controls many columns use - facets fill columns left--right, wrap new rows. ideal many facet levels want automatic layout adapts available space. Facet wrap works well 3-15 groups want see group‚Äôs pattern separately maintaining visual comparison. automatically handles scales: default facets share x y scales easy comparison, though can set scales ‚Äúfree‚Äù independent axes. Use comparing patterns across time periods, regions, categories. Facet block: wrap layout","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/articles/blockr-ggplot-showcase.html","id":"facet-grid-layout","dir":"Articles","previous_headings":"","what":"Facet: Grid Layout","title":"blockr.ggplot Showcase: Visualization Blocks","text":"Facet grid creates matrix panels based two categorical variables - one rows one columns. Use ‚Äúgrid‚Äù mode want examine combinations two factors. Select variables facet_rows facet_cols create rows √ó columns layout. cell grid shows intersection one row category one column category. structured layout makes easy see patterns vary across dimensions simultaneously. Facet grid powerful experimental designs multiple factors, comparing subgroups across time periods, situation data naturally organized two categorical variables. grid structure reveals interaction effects makes systematic comparisons straightforward. Keep factor levels reasonable (typically 2-5 levels per dimension) maintain readability. Facet block: grid layout","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/articles/blockr-ggplot-showcase.html","id":"theme-block","dir":"Articles","previous_headings":"","what":"Theme Block","title":"blockr.ggplot Showcase: Visualization Blocks","text":"theme block applies pre-defined styling plots. Use themes quickly change overall appearance visualizations without adjusting individual elements. Select 20 built-themes including classic ggplot2 themes (theme_minimal, theme_classic, theme_bw) themes extension packages like ggthemes. theme provides coherent visual style coordinated choices backgrounds, grids, fonts, colors. Themes control non-data elements: backgrounds, grid lines, axis styling, legend appearance, text formatting. Apply theme block visualization blocks style entire plot consistently. Common choices include theme_minimal clean presentations, theme_classic publication-ready plots, theme_dark emphasis presentations dark backgrounds. Theme block","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/articles/blockr-ggplot-showcase.html","id":"grid-block","dir":"Articles","previous_headings":"","what":"Grid Block","title":"blockr.ggplot Showcase: Visualization Blocks","text":"grid block composes multiple plots single figure using patchwork. Use create publication-ready figures combining related visualizations. Select layout style (horizontal, vertical, grid) specify number plots. block automatically arranges connected plots according layout choice. Horizontal layouts place plots side--side comparing across categories. Vertical layouts stack plots showing different aspects data. Grid layouts create matrices comprehensive multi-panel figures. Grid composition essential complex figures tell complete story multiple related views. input can complete visualization pipeline, allowing combine different chart types, subsets, transformations. particularly powerful academic papers, reports, dashboards need present multiple coordinated views. Grid block","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/articles/blockr-ggplot-showcase.html","id":"building-visualization-pipelines","dir":"Articles","previous_headings":"","what":"Building Visualization Pipelines","title":"blockr.ggplot Showcase: Visualization Blocks","text":"Blocks work together pipelines. Connect data transformation blocks (blockr.dplyr) visualization blocks create end--end analysis workflows. output block becomes input next. block shows preview stage, making easy understand data flows pipeline.","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicolas Bennett. Author, maintainer. Christoph Sax. Author.","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bennett N, Sax C (2025). blockr.ggplot: Interactive ggplot2 Charts Blockr. R package version 0.0.1.","code":"@Manual{,   title = {blockr.ggplot: Interactive ggplot2 Charts for Blockr},   author = {Nicolas Bennett and Christoph Sax},   year = {2025},   note = {R package version 0.0.1}, }"},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/index.html","id":"blockrggplot","dir":"","previous_headings":"","what":"Interactive ggplot2 Charts for Blockr","title":"Interactive ggplot2 Charts for Blockr","text":"blockr.ggplot extends blockr.core single, powerful universal ggplot block provides major visualization types intuitive interface. Simply select chart type watch interface dynamically adapt show relevant controls. Build visualization pipelines connecting data transformation blocks flexible plotting block interactive drag--drop interface.","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Interactive ggplot2 Charts for Blockr","text":"Install development version GitHub:","code":"# install.packages(\"devtools\") pak::pak(\"BristolMyersSquibb/blockr.ggplot\")"},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick Start","title":"Interactive ggplot2 Charts for Blockr","text":"launches interactive web interface can: - Switch chart types instantly - Change scatter bar, line, boxplot, single dropdown - Dynamic controls - UI automatically adapts show relevant options selected chart type - Real-time preview - See visualization update modify settings - Rich customization - Fine-tune aesthetics, themes, styling options","code":"library(blockr.ggplot)  # Create and serve the universal ggplot block blockr.core::serve(   new_ggplot_block(type = \"point\", x = \"wt\", y = \"mpg\", color = \"cyl\"),   data = list(data = mtcars) )"},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Interactive ggplot2 Charts for Blockr","text":"comprehensive showcase available blocks screenshots detailed explanations:","code":"vignette(\"blockr-ggplot-showcase\", package = \"blockr.ggplot\")"},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/index.html","id":"the-universal-ggplot-block","dir":"","previous_headings":"","what":"The Universal ggplot Block","title":"Interactive ggplot2 Charts for Blockr","text":"blockr.ggplot provides single, powerful block handles visualization needs. need learn multiple blocks - just one interface adapts chosen chart type.","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/index.html","id":"key-features","dir":"","previous_headings":"The Universal ggplot Block","what":"Key Features","title":"Interactive ggplot2 Charts for Blockr","text":"üîÑ One Block, Many Charts: Switch 9+ chart types single dropdown üéØ Smart Interface: Controls dynamically show/hide based selected chart type üé® Rich Aesthetics: Map data colors, shapes, sizes, fills, ‚ö° Real-time Updates: See changes instantly adjust settings üé≠ Multiple Themes: Choose minimal, classic, dark, light, gray themes","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/index.html","id":"available-chart-types","dir":"","previous_headings":"The Universal ggplot Block","what":"Available Chart Types","title":"Interactive ggplot2 Charts for Blockr","text":"Simply change type parameter create different visualizations:","code":"# Scatter plot blockr.core::serve(   new_ggplot_block(type = \"point\", x = \"wt\", y = \"mpg\", color = \"cyl\"),   data = list(data = mtcars) )  # Bar chart blockr.core::serve(   new_ggplot_block(type = \"bar\", x = \"cyl\", fill = \"gear\"),   data = list(data = mtcars) )  # Line chart blockr.core::serve(   new_ggplot_block(type = \"line\", x = \"wt\", y = \"mpg\", color = \"cyl\"),   data = list(data = mtcars) )  # Box plot blockr.core::serve(   new_ggplot_block(type = \"boxplot\", x = \"cyl\", y = \"mpg\"),   data = list(data = mtcars) )  # And many more: violin, density, area, histogram, pie..."},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/index.html","id":"chart-types-gallery","dir":"","previous_headings":"","what":"Chart Types Gallery","title":"Interactive ggplot2 Charts for Blockr","text":"visualizations created ggplot_block - just changing type parameter. screenshot shows universal block configured specific chart type.","code":""},{"path":[]},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/index.html","id":"scatter-plot-type--point","dir":"","previous_headings":"Chart Types Gallery > Distribution Visualizations","what":"Scatter Plot (type = \"point\")","title":"Interactive ggplot2 Charts for Blockr","text":"Perfect exploring relationships continuous variables","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/index.html","id":"histogram-type--histogram","dir":"","previous_headings":"Chart Types Gallery > Distribution Visualizations","what":"Histogram (type = \"histogram\")","title":"Interactive ggplot2 Charts for Blockr","text":"Visualize distribution single continuous variable","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/index.html","id":"density-plot-type--density","dir":"","previous_headings":"Chart Types Gallery > Distribution Visualizations","what":"Density Plot (type = \"density\")","title":"Interactive ggplot2 Charts for Blockr","text":"Smooth probability density curves distribution analysis","code":""},{"path":[]},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/index.html","id":"bar-chart-type--bar","dir":"","previous_headings":"Chart Types Gallery > Categorical Comparisons","what":"Bar Chart (type = \"bar\")","title":"Interactive ggplot2 Charts for Blockr","text":"Compare values across categories optional grouping stacking","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/index.html","id":"box-plot-type--boxplot","dir":"","previous_headings":"Chart Types Gallery > Categorical Comparisons","what":"Box Plot (type = \"boxplot\")","title":"Interactive ggplot2 Charts for Blockr","text":"Show distribution statistics across different groups","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/index.html","id":"violin-plot-type--violin","dir":"","previous_headings":"Chart Types Gallery > Categorical Comparisons","what":"Violin Plot (type = \"violin\")","title":"Interactive ggplot2 Charts for Blockr","text":"Combine box plot statistics density distribution shapes","code":""},{"path":[]},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/index.html","id":"line-chart-type--line","dir":"","previous_headings":"Chart Types Gallery > Time Series & Trends","what":"Line Chart (type = \"line\")","title":"Interactive ggplot2 Charts for Blockr","text":"Track changes time continuous sequences","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/index.html","id":"area-chart-type--area","dir":"","previous_headings":"Chart Types Gallery > Time Series & Trends","what":"Area Chart (type = \"area\")","title":"Interactive ggplot2 Charts for Blockr","text":"Emphasize cumulative totals magnitude change","code":""},{"path":[]},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/index.html","id":"pie-chart-type--pie","dir":"","previous_headings":"Chart Types Gallery > Proportions","what":"Pie Chart (type = \"pie\")","title":"Interactive ggplot2 Charts for Blockr","text":"Show parts whole (set donut = TRUE donut charts)","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/index.html","id":"advanced-composition-blocks","dir":"","previous_headings":"","what":"Advanced Composition Blocks","title":"Interactive ggplot2 Charts for Blockr","text":"Beyond universal ggplot block, blockr.ggplot provides specialized blocks advanced plot composition styling:","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/index.html","id":"facet-block---small-multiples","dir":"","previous_headings":"Advanced Composition Blocks","what":"Facet Block - Small Multiples","title":"Interactive ggplot2 Charts for Blockr","text":"Split visualization multiple panels compare patterns across categories. facet block supports facet_wrap() (flexible grid layout) facet_grid() (rows √ó columns matrix). Key Features: - üìä Two Modes: facet_wrap (auto-layout) facet_grid (explicit rows/columns) - üìê Visual Preview: See facet layout rendering - üéØ Flexible Scales: Free, fixed, partially free axes - üè∑Ô∏è Custom Labels: Multiple labeller functions panel titles","code":"# Example: Split scatter plot by cylinder count board <- new_board(   blocks = c(     data = new_dataset_block(\"mtcars\", package = \"datasets\"),     scatter = new_ggplot_block(       type = \"point\",       x = \"wt\",       y = \"mpg\",       color = \"cyl\"     ),     facet = new_facet_block(       facet_type = \"wrap\",       facets = \"cyl\",       ncol = \"2\",       scales = \"free_y\"  # Independent Y-axis per panel     )   ),   links = c(     new_link(\"data\", \"scatter\", \"data\"),     new_link(\"scatter\", \"facet\", \"data\")   ) )  blockr.core::serve(board)"},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/index.html","id":"grid-block---multi-plot-dashboards","dir":"","previous_headings":"Advanced Composition Blocks","what":"Grid Block - Multi-Plot Dashboards","title":"Interactive ggplot2 Charts for Blockr","text":"Combine multiple independent plots unified dashboard using powerful patchwork package. Plots automatically aligned arranged publication-quality output. Key Features: - üé® Automatic Layout: Intelligent plot arrangement using patchwork - üîó Number Plots: Combine 2, 3, 4+ plots seamlessly - üìè Perfect Alignment: Axes, legends, spacing automatically aligned - üìä Mixed Chart Types: Combine scatter, bar, line, box plots, ","code":"# Example: Combine three different chart types board <- new_board(   blocks = c(     data = new_dataset_block(\"mtcars\", package = \"datasets\"),     scatter = new_ggplot_block(type = \"point\", x = \"wt\", y = \"mpg\", color = \"cyl\"),     boxplot = new_ggplot_block(type = \"boxplot\", x = \"cyl\", y = \"mpg\", fill = \"cyl\"),     histogram = new_ggplot_block(type = \"histogram\", x = \"mpg\", bins = 15),     grid = new_grid_block()   ),   links = c(     new_link(\"data\", \"scatter\", \"data\"),     new_link(\"data\", \"boxplot\", \"data\"),     new_link(\"data\", \"histogram\", \"data\"),     new_link(\"scatter\", \"grid\", \"1\"),     new_link(\"boxplot\", \"grid\", \"2\"),     new_link(\"histogram\", \"grid\", \"3\")   ) )  blockr.core::serve(board)"},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/index.html","id":"theme-block---professional-styling","dir":"","previous_headings":"Advanced Composition Blocks","what":"Theme Block - Professional Styling","title":"Interactive ggplot2 Charts for Blockr","text":"Apply professional themes fine-tune visual styling 20+ pre-built themes ggplot2, ggthemes, cowplot, ggpubr packages. Available Themes: - üìà ggplot2 Built-ins: minimal, classic, gray, bw, dark, light, void, test - üéØ ggthemes: Economist, FiveThirtyEight, Tufte, WSJ, Excel, - üì∞ cowplot: Publication-ready themes clean backgrounds - üî¨ ggpubr: Scientific publication themes Customization Options: - üé® Colors (background, panel, grid, text) - üìù Typography (font size, family) - üî≤ Grid lines panel borders - üìç Legend position styling","code":"# Example: Apply publication-ready theme board <- new_board(   blocks = c(     data = new_dataset_block(\"mtcars\", package = \"datasets\"),     scatter = new_ggplot_block(       type = \"point\",       x = \"wt\",       y = \"mpg\",       color = \"cyl\"     ),     theme = new_theme_block(       base_theme = \"minimal\"  # Choose from 20+ themes     )   ),   links = c(     new_link(\"data\", \"scatter\", \"data\"),     new_link(\"scatter\", \"theme\", \"data\")   ) )  blockr.core::serve(board)"},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/index.html","id":"example-interactive-pipeline-with-dag-board","dir":"","previous_headings":"","what":"Example: Interactive Pipeline with DAG Board","title":"Interactive ggplot2 Charts for Blockr","text":"universal ggplot block integrates seamlessly blockr‚Äôs pipeline system: creates interactive dashboard can: - Switch visualizations --fly: Change chart type without breaking pipeline - Modify data sources: Swap datasets add transformation blocks - Build complex workflows: Chain multiple data operations visualization","code":"library(blockr.core) library(blockr.ggplot) library(blockr.ui)  # Create a visualization pipeline with the universal ggplot block board <- blockr.ui::new_dag_board(   blocks = c(     data_block = new_dataset_block(\"iris\", package = \"datasets\"),     chart = new_ggplot_block(       type = \"point\",  # Start with scatter plot       x = \"Sepal.Length\",       y = \"Petal.Length\",       color = \"Species\"     )   ),   links = c(     chart_link = new_link(\"data_block\", \"chart\", \"data\")   ) )  blockr.core::serve(board)"},{"path":[]},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/index.html","id":"exploring-different-chart-types-with-same-data","dir":"","previous_headings":"More Examples","what":"Exploring Different Chart Types with Same Data","title":"Interactive ggplot2 Charts for Blockr","text":"","code":"# Try different visualizations of the same dataset library(blockr.ggplot)  # Distribution of a single variable blockr.core::serve(   new_ggplot_block(type = \"histogram\", x = \"mpg\", bins = 20),   data = list(data = mtcars) )  # Relationship between variables blockr.core::serve(   new_ggplot_block(type = \"point\", x = \"hp\", y = \"mpg\", color = \"cyl\", size = \"wt\"),   data = list(data = mtcars) )  # Group comparisons blockr.core::serve(   new_ggplot_block(type = \"violin\", x = \"cyl\", y = \"mpg\", fill = \"cyl\"),   data = list(data = mtcars) )  # Proportions blockr.core::serve(   new_ggplot_block(type = \"pie\", x = \"cyl\", donut = TRUE),   data = list(data = mtcars) )"},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Interactive ggplot2 Charts for Blockr","text":"Want contribute blockr.ggplot? See Developer Documentation get started. developer docs include: - Complete guide creating blocks - blockr.ggplot architecture patterns - Step--step examples templates - Testing validation guidelines","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/index.html","id":"learn-more","dir":"","previous_headings":"","what":"Learn More","title":"Interactive ggplot2 Charts for Blockr","text":"blockr.core documentation blockr.ui documentation blockr.dplyr documentation ggplot2 documentation","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/block_container_script.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate container query script for responsive blocks ‚Äî block_container_script","title":"Generate container query script for responsive blocks ‚Äî block_container_script","text":"Sets container queries supported browser.","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/block_container_script.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate container query script for responsive blocks ‚Äî block_container_script","text":"","code":"block_container_script()"},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/block_container_script.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate container query script for responsive blocks ‚Äî block_container_script","text":"HTML script tag","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/block_responsive_css.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate responsive CSS for blockr blocks ‚Äî block_responsive_css","title":"Generate responsive CSS for blockr blocks ‚Äî block_responsive_css","text":"Creates CSS responsive grid layout using 'block-' prefix. Can reused across different blockr packages.","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/block_responsive_css.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate responsive CSS for blockr blocks ‚Äî block_responsive_css","text":"","code":"block_responsive_css()"},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/block_responsive_css.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate responsive CSS for blockr blocks ‚Äî block_responsive_css","text":"HTML style tag responsive CSS","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/blockr.ggplot-package.html","id":null,"dir":"Reference","previous_headings":"","what":"blockr.ggplot: Interactive ggplot2 Charts for Blockr ‚Äî blockr.ggplot-package","title":"blockr.ggplot: Interactive ggplot2 Charts for Blockr ‚Äî blockr.ggplot-package","text":"Provides comprehensive blocks plotting blockr using 'ggplot2'. Includes PowerBI-style chart types (bar charts, line charts, pie charts, scatter plots) well statistical plots (boxplots, histograms, density plots, violin plots, heatmaps) rich customization options intuitive user interfaces.","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/blockr.ggplot-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"blockr.ggplot: Interactive ggplot2 Charts for Blockr ‚Äî blockr.ggplot-package","text":"Maintainer: Nicolas Bennett nicolas@cynkra.com Authors: Christoph Sax christoph@cynkra.com","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/new_facet_block.html","id":null,"dir":"Reference","previous_headings":"","what":"Facet Block ‚Äî new_facet_block","title":"Facet Block ‚Äî new_facet_block","text":"Applies faceting ggplot object using facet_wrap() facet_grid(). Accepts single ggplot input adds faceting based data columns.","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/new_facet_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Facet Block ‚Äî new_facet_block","text":"","code":"new_facet_block(   facet_type = \"wrap\",   facets = character(),   rows = character(),   cols = character(),   ncol = character(),   nrow = character(),   scales = \"fixed\",   labeller = \"label_value\",   dir = \"h\",   space = \"fixed\",   ... )"},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/new_facet_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Facet Block ‚Äî new_facet_block","text":"facet_type Type faceting: \"wrap\" \"grid\" (default: \"wrap\") facets Column(s) facet facet_wrap (character vector) rows Column(s) row facets facet_grid (character vector) cols Column(s) column facets facet_grid (character vector) ncol Number columns facet_wrap (default: NULL auto) nrow Number rows facet_wrap (default: NULL auto) scales Scale behavior: \"fixed\", \"free\", \"free_x\", \"free_y\" (default: \"fixed\") labeller Labeller function: \"label_value\", \"label_both\", \"label_parsed\" (default: \"label_value\") dir Direction facet_wrap: \"h\" (horizontal) \"v\" (vertical) (default: \"h\") space Space behavior facet_grid: \"fixed\", \"free_x\", \"free_y\" (default: \"fixed\") ... Forwarded new_ggplot_transform_block()","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/new_ggplot_block.html","id":null,"dir":"Reference","previous_headings":"","what":"Universal ggplot block with selectable visualization types ‚Äî new_ggplot_block","title":"Universal ggplot block with selectable visualization types ‚Äî new_ggplot_block","text":"flexible block allows users select various ggplot2 geoms dynamically shows relevant aesthetics selected visualization.","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/new_ggplot_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Universal ggplot block with selectable visualization types ‚Äî new_ggplot_block","text":"","code":"new_ggplot_block(   type = \"point\",   x = character(),   y = character(),   color = character(),   fill = character(),   size = character(),   shape = character(),   linetype = character(),   group = character(),   alpha = character(),   density_alpha = 0.8,   position = \"stack\",   bins = 30,   donut = FALSE,   ... )"},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/new_ggplot_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Universal ggplot block with selectable visualization types ‚Äî new_ggplot_block","text":"type Initial chart type (default \"point\"). Options: \"point\", \"bar\", \"line\", \"boxplot\", \"violin\", \"density\", \"area\", \"histogram\", \"pie\" x Column x-axis y Column y-axis color Column color aesthetic fill Column fill aesthetic size Column size aesthetic shape Column shape aesthetic linetype Column linetype aesthetic group Column group aesthetic alpha Column alpha aesthetic (variable transparency) density_alpha Fixed alpha value density plots (default 0.8) position Position adjustment certain geoms bins Number bins histogram donut Whether create donut chart type \"pie\" (default FALSE) ... Forwarded new_plot_block","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/new_ggplot_transform_block.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot transform block constructor ‚Äî new_ggplot_transform_block","title":"ggplot transform block constructor ‚Äî new_ggplot_transform_block","text":"Creates specialized block ggplot2-based visualizations. block returns ggplot objects data, allowing ggplot blocks chained together (e.g., combining plots patchwork). Custom output methods ensure plots displayed properly rather data tables.","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/new_ggplot_transform_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot transform block constructor ‚Äî new_ggplot_transform_block","text":"","code":"new_ggplot_transform_block(server, ui, class, ctor = sys.parent(), ...)"},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/new_ggplot_transform_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot transform block constructor ‚Äî new_ggplot_transform_block","text":"server Server function block ui UI function block class Character vector CSS classes block ctor Constructor environment (default sys.parent()) ... Additional arguments forwarded blockr.core::new_block()","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/new_ggplot_transform_block.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot transform block constructor ‚Äî new_ggplot_transform_block","text":"ggplot_transform_block object","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/new_grid_block.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid Block ‚Äî new_grid_block","title":"Grid Block ‚Äî new_grid_block","text":"Combines multiple ggplot objects using patchwork::wrap_plots(). Variadic block accepts 1 ggplot inputs automatic alignment. Supports layout control (ncol, nrow) annotations (title, subtitle, auto-tags).","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/new_grid_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grid Block ‚Äî new_grid_block","text":"","code":"new_grid_block(   ncol = character(),   nrow = character(),   title = character(),   subtitle = character(),   caption = character(),   tag_levels = character(),   guides = \"auto\",   ... )"},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/new_grid_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grid Block ‚Äî new_grid_block","text":"ncol Number columns grid layout (default: NULL auto) nrow Number rows grid layout (default: NULL auto) title Overall plot title (default: \"\") subtitle Overall plot subtitle (default: \"\") caption Overall plot caption (default: \"\") tag_levels Auto-tagging style: '', '', '1', '', '', NULL (default: NULL) guides Legend handling: 'auto', 'collect', 'keep' (default: 'auto') ... Forwarded new_ggplot_transform_block()","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/new_theme_block.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme customization block for ggplot2 plots ‚Äî new_theme_block","title":"Theme customization block for ggplot2 plots ‚Äî new_theme_block","text":"block applies advanced theme customizations ggplot2 objects. Allows fine-grained control backgrounds, fonts, grid lines, . Empty/NULL values use base theme's defaults.","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/new_theme_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme customization block for ggplot2 plots ‚Äî new_theme_block","text":"","code":"new_theme_block(   panel_bg = \"\",   plot_bg = \"\",   base_size = NA_real_,   base_family = \"auto\",   show_major_grid = \"auto\",   show_minor_grid = \"auto\",   grid_color = \"\",   show_panel_border = \"auto\",   legend_position = \"auto\",   base_theme = \"auto\",   ... )"},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/new_theme_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme customization block for ggplot2 plots ‚Äî new_theme_block","text":"panel_bg Panel background color (default \"\" uses base theme default) plot_bg Plot background color (default \"\" uses base theme default) base_size Base font size points (default NA uses base theme default) base_family Font family: \"auto\", \"sans\", \"serif\", \"mono\" (default \"auto\" preserves upstream font) show_major_grid Show major grid lines: \"auto\", \"show\", \"hide\" (default \"auto\" uses base theme default) show_minor_grid Show minor grid lines: \"auto\", \"show\", \"hide\" (default \"auto\" uses base theme default) grid_color Grid line color (default \"\" uses base theme default) show_panel_border Show panel border: \"auto\", \"show\", \"hide\" (default \"auto\" uses base theme default) legend_position Legend position: \"auto\", \"right\", \"left\", \"top\", \"bottom\", \"none\" (default \"auto\" preserves upstream position) base_theme Base ggplot2 theme: \"auto\", \"minimal\", \"classic\", \"gray\", \"bw\", etc. (default \"auto\" preserves upstream theme) ... Forwarded new_transform_block","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/validate_block_screenshot.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a blockr block by generating a screenshot ‚Äî validate_block_screenshot","title":"Validate a blockr block by generating a screenshot ‚Äî validate_block_screenshot","text":"function creates temporary Shiny app provided block, takes screenshot, returns result. designed simple, direct way test whether block implementation works correctly.","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/validate_block_screenshot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a blockr block by generating a screenshot ‚Äî validate_block_screenshot","text":"","code":"validate_block_screenshot(   block,   data = datasets::mtcars,   filename = NULL,   output_dir = \"man/figures\",   width = 800,   height = 600,   delay = 5,   verbose = TRUE )"},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/validate_block_screenshot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a blockr block by generating a screenshot ‚Äî validate_block_screenshot","text":"block blockr block object (e.g., new_chart_block()) data Data use block (default: mtcars) filename Name screenshot file (default: auto-generated) output_dir Directory save screenshot (default: \"man/figures\") width Screenshot width pixels (default: 800) height Screenshot height pixels (default: 600) delay Seconds wait app load (default: 5) verbose Print progress messages (default: TRUE)","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/validate_block_screenshot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate a blockr block by generating a screenshot ‚Äî validate_block_screenshot","text":"list components: success: Logical indicating screenshot created successfully path: Full path screenshot file (NULL failed) error: Error message failed (NULL successful) filename: Name screenshot file","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/validate_block_screenshot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate a blockr block by generating a screenshot ‚Äî validate_block_screenshot","text":"","code":"if (FALSE) { # \\dontrun{ # Simple usage with default data (mtcars) result <- validate_block_screenshot(   new_chart_block(type = \"point\", x = \"wt\", y = \"mpg\") )  # With custom data result <- validate_block_screenshot(   new_chart_block(type = \"bar\", x = \"Species\"),   data = iris,   filename = \"iris-bar-chart.png\" )  # Check if successful if (result$success) {   cat(\"Screenshot saved to:\", result$path) } else {   cat(\"Failed:\", result$error) }  # Test a new block implementation my_block <- new_chart_block(   type = \"histogram\",   x = \"mpg\",   bins = 20,   fill = \"cyl\" ) result <- validate_block_screenshot(   my_block,   filename = \"test-histogram.png\" ) } # }"},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/validate_blocks_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch validate multiple blocks with screenshots ‚Äî validate_blocks_batch","title":"Batch validate multiple blocks with screenshots ‚Äî validate_blocks_batch","text":"Convenience function validate multiple blocks generate summary report blocks work .","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/validate_blocks_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch validate multiple blocks with screenshots ‚Äî validate_blocks_batch","text":"","code":"validate_blocks_batch(   blocks,   data = datasets::mtcars,   output_dir = \"man/figures\",   verbose = TRUE )"},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/validate_blocks_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch validate multiple blocks with screenshots ‚Äî validate_blocks_batch","text":"blocks Named list blocks validate data Data use blocks (can also named list matching block names) output_dir Directory save screenshots (default: \"man/figures\") verbose Print progress messages (default: TRUE)","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/validate_blocks_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch validate multiple blocks with screenshots ‚Äî validate_blocks_batch","text":"data frame validation results block","code":""},{"path":"https://bristolmyerssquibb.github.io/blockr.ggplot/reference/validate_blocks_batch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch validate multiple blocks with screenshots ‚Äî validate_blocks_batch","text":"","code":"if (FALSE) { # \\dontrun{ # Test multiple blocks blocks <- list(   scatter = new_chart_block(type = \"point\", x = \"wt\", y = \"mpg\"),   bar = new_chart_block(type = \"bar\", x = \"cyl\"),   histogram = new_chart_block(type = \"histogram\", x = \"mpg\") )  results <- validate_blocks_batch(blocks) print(results)  # With different data for each block blocks <- list(   iris_scatter = new_chart_block(     type = \"point\",     x = \"Sepal.Length\",     y = \"Sepal.Width\"   ),   mtcars_bar = new_chart_block(type = \"bar\", x = \"cyl\") )  data_list <- list(   iris_scatter = iris,   mtcars_bar = datasets::mtcars )  results <- validate_blocks_batch(blocks, data = data_list) } # }"}]
